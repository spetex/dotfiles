" -----------------------------------------------------------------------------
" GENERIC SETTINGS
" -----------------------------------------------------------------------------
colorscheme monokai
filetype plugin indent on "Enable filetype specific indent scripts
set nocompatible
syntax on
filetype plugin on
set backupcopy=yes "Do not use swaps and update directly files. (hot reload)
set clipboard=unnamedplus "Set the OS register for vim clipboard
set cursorline "Highlight current line
set directory=~/.vim/swps "Dir for swp files.
set encoding=utf-8 "Always use encoding UTF-8.
set expandtab "Use spaces instead tabs
set mouse=a "Enable mouse scrolling

set foldmethod=manual
" set foldnestmax=2 "Maximum nested folds
" set nofoldenable "Do not fold files when opening
" set foldlevel=2 "Folding level
let &colorcolumn="80,".join(range(100,999),",") "Color max length breakpoints

set history=1000 "Default is 20, I'd rather set this to âˆž
set laststatus=2 "Always show file status line.
set number "Show line numbers.
set numberwidth=4 "Spacing always given to these numbers.
set shiftwidth=2
set softtabstop=2
set tabstop=2
set undodir=~/.vim/undodir "Dir for undo history.
set undofile "Maintain undo history between sessions.
set noshowmode "Do not show indicator for insert, use lightline instead
command! Wq wq "https://sanctum.geek.nz/arabesque/vim-koans/

" -----------------------------------------------------------------------------
" PLUGINS
" -----------------------------------------------------------------------------

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'VundleVim/Vundle.vim'

" QOL Plugins
" Plugin 'BobWhitelock/HiCursorWords' "Highlight same words under cursor
Plugin 'hotoo/highlight-cursor-word.vim' "Highlight same words under cursor
Plugin 'Valloric/MatchTagAlways' "Highlight matching tag
Plugin 'ntpeters/vim-better-whitespace' "Highlight whitespace in files
Plugin 'henrik/vim-indexed-search' "Adds number of results to search
Plugin 'Yggdroot/indentLine' "Better & smarter indentation rules
Plugin 'airblade/vim-gitgutter' "Show changed lines in gutter
Plugin 'alvan/vim-closetag' "Auto complete closetags
Plugin 'jiangmiao/auto-pairs' "Automatticaly add a paired hyphen/parenthesis
Plugin 'junegunn/vim-peekaboo' "Shows the content of registers
Plugin 'terryma/vim-multiple-cursors' "Multicursor support
Plugin 'tpope/vim-commentary' "Comment multiple lines at once
Plugin 'tpope/vim-eunuch' "Vim sugar for UNIX shell commands
Plugin 'tpope/vim-fugitive' "Helpful git addon
Plugin 'tpope/vim-repeat' "Enable . for special commands
Plugin 'tpope/vim-sensible' "Common ground of all vim users
Plugin 'tpope/vim-surround' "Change surroundings easily
Plugin 'embear/vim-localvimrc' " Use local .vimrc files for specific projects

" " Eye Candy
Plugin 'itchyny/lightline.vim' "Theme
Plugin 'mhinz/vim-startify' "Custom vim startup page
Plugin 'ap/vim-css-color' "Show color highlights

" Search
Plugin 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plugin 'junegunn/fzf.vim'

" Autocompletion
Plugin 'neoclide/coc.nvim', {'do': 'yarn install --froze-lockfile'}

" Language Syntax Support
Plugin 'sheerun/vim-polyglot' "Syntax for all languages
Plugin 'reasonml-editor/vim-reason-plus' " ReasonML syntax
Plugin 'andreshazard/vim-freemarker' " Freemarker Syntax
Plugin 'udalov/kotlin-vim'


call vundle#end()

" -----------------------------------------------------------------------------
" KEY BINDINGS
" -----------------------------------------------------------------------------

"Enter newlines without entering insert mode
nmap <CR> o<Esc>k
" Tab Navigation
"
nnoremap tj  :tabprev<CR>
nnoremap tk  :tabnext<CR>
nnoremap tn  :tabnew<CR>
" FZF & Ag Search
nnoremap fzf :FZF<CR>
nnoremap ; :Buffers<CR>
nnoremap , :Ag<CR>
" Disable arrow keys
noremap <Up> <Nop>
noremap <Down> <Nop>
noremap <Left> <Nop>
noremap <Right> <Nop>

" -----------------------------------------------------------------------------
" PLUGIN SPECIFIC SETTINGS
" -----------------------------------------------------------------------------
" Enable JSX syntax highlighting in .js files
let g:jsx_ext_required = 0
" Fugitive to status line
" set statusline+=%{fugitive#statusline()}
" Enable tag matching in these files
let g:mta_use_matchparen_group = 1
let g:mta_filetypes = {
    \ 'html' : 1,
    \ 'javascript.jsx' : 1,
    \ 'xhtml' : 1,
    \ 'xml' : 1,
    \ 'jinja' : 1,
    \ 'ftl' : 1,
    \ }
"Closing hmtl tags
let g:closetag_filenames = "*.html,*.xhtml,*.phtml,*.jsx,*.vue"
"Set some frontend filetypes
autocmd BufNewFile,BufRead .babelrc set filetype=javascript
autocmd BufNewFile,BufRead *.es6 set filetype=javascript
autocmd BufNewFile,BufRead *.ftl set filetype=javascript
autocmd BufNewFile,BufRead .eslintrc,.reduxrc set filetype=json
autocmd BufNewFile,BufRead gitconfig set filetype=gitconfig
autocmd BufNewFile,BufRead *.ts set filetype=typescript
autocmd BufNewFile,BufRead *.vue set filetype=vue
"Dont hide JSON syntax.
let g:vim_json_syntax_conceal = 0
"Set cursor word highlight to 100ms
let g:HiCursorWords_delay = 100
" Load local .vimrc files - .lvimrc without asking
let g:localvimrc_ask = 0

let g:coc_filetype_map = {
  \ '*.vue': 'vue',
  \ '*.ts': 'typescript',
  \ }

