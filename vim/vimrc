" -----------------------------------------------------------------------------
" GENERIC SETTINGS
" -----------------------------------------------------------------------------
colorscheme monokai "Setup for monokai colors
filetype plugin indent on "Enable filetype specific indent scripts
set backupcopy=yes "Do not use swaps and update directly files. (hot reload)
set clipboard=unnamedplus "Set the OS register for vim clipboard
set cursorline "Highlight current line
set directory=~/.vim/swps "Dir for swp files.
set encoding=utf-8 "Always use encoding UTF-8.
set expandtab "Use spaces instead tabs

set foldmethod=indent
set foldnestmax=2 "Maximum nested folds
set nofoldenable "Do not fold files when opening
set foldlevel=2 "Folding level
let &colorcolumn="80,".join(range(100,999),",") "Color max length breakpoints

set history=1000 "Default is 20, I'd rather set this to âˆž
set laststatus=2 "Always show file status line.
set number "Show line numbers.
set numberwidth=4 "Spacing always given to these numbers.
set shiftwidth=2
set softtabstop=2
set tabstop=2
set undodir=~/.vim/undodir "Dir for undo history.
set undofile "Maintain undo history between sessions.
set noshowmode "Do not show indicator for insert, use lightline instead
command! Wq wq "https://sanctum.geek.nz/arabesque/vim-koans/

" -----------------------------------------------------------------------------
" PLUGINS
" -----------------------------------------------------------------------------

call plug#begin()

" QOL Plugins
Plug 'BobWhitelock/HiCursorWords' "Highlight same words under cursor
Plug 'Valloric/MatchTagAlways' "Highlight matching tag
Plug 'ntpeters/vim-better-whitespace' "Highlight whitespace in files
Plug 'henrik/vim-indexed-search' "Adds number of results to search
Plug 'Yggdroot/indentLine' "Better & smarter indentation rules
Plug 'airblade/vim-gitgutter' "Show changed lines in gutter
Plug 'alvan/vim-closetag' "Auto complete closetags
Plug 'jiangmiao/auto-pairs' "Automatticaly add a paired hyphen/parenthesis
Plug 'junegunn/vim-peekaboo' "Shows the content of registers
Plug 'terryma/vim-multiple-cursors' "Multicursor support
Plug 'tpope/vim-commentary' "Comment multiple lines at once
Plug 'tpope/vim-eunuch' "Vim sugar for UNIX shell commands
Plug 'tpope/vim-fugitive' "Helpful git addon
Plug 'tpope/vim-repeat' "Enable . for special commands
Plug 'tpope/vim-sensible' "Common ground of all vim users
Plug 'tpope/vim-surround' "Change surroundings easily
Plug 'christoomey/vim-tmux-navigator' "Navigate splits & panes with one hotkey

" Eye Candy
Plug 'itchyny/lightline.vim' "Theme
Plug 'mhinz/vim-startify' "Custom vim startup page

" Search
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'

" Autocompletion
Plug 'Valloric/YouCompleteMe'

" Language Syntax Support
Plug 'sheerun/vim-polyglot' "Syntax for all languages
Plug 'reasonml-editor/vim-reason-plus' " ReasonML syntax

" Linting
Plug 'w0rp/ale' "Asynchronous Linting Engine

call plug#end()

" -----------------------------------------------------------------------------
" KEY BINDINGS
" -----------------------------------------------------------------------------

"Enter newlines without entering insert mode
nmap <CR> o<Esc>k
" Tab Navigation
nnoremap tj  :tabprev<CR>
nnoremap tk  :tabnext<CR>
nnoremap tn  :tabnew<CR>
" FZF & Ag Search
nnoremap fzf :FZF<CR>
nnoremap ; :Buffers<CR>
nnoremap , :Ag<CR>
" Dissable arrow keys
noremap <Up> <Nop>
noremap <Down> <Nop>
noremap <Left> <Nop>
noremap <Right> <Nop>

" LanguageServer keypms
nnoremap <silent> gd :call LanguageClient_textDocument_definition()<cr>
nnoremap <silent> gf :call LanguageClient_textDocument_formatting()<cr>
nnoremap <silent> <cr> :call LanguageClient_textDocument_hover()<cr>

" -----------------------------------------------------------------------------
" PLUGIN SPECIFIC SETTINGS
" -----------------------------------------------------------------------------

" Enable JSX syntax highlighting in .js files
let g:jsx_ext_required = 0
" Fugitive to status line
set statusline+=%{fugitive#statusline()}
" Enable tag matching in these files
let g:mta_use_matchparen_group = 1
let g:mta_filetypes = {
    \ 'html' : 1,
    \ 'javascript.jsx' : 1,
    \ 'xhtml' : 1,
    \ 'xml' : 1,
    \ 'jinja' : 1,
    \}
"Closing hmtl tags
let g:closetag_filenames = "*.html,*.xhtml,*.phtml,*.jsx"
"Set some frontend filetypes
autocmd BufNewFile,BufRead .babelrc set filetype=javascript
autocmd BufNewFile,BufRead .eslintrc,.reduxrc set filetype=json
autocmd BufNewFile,BufRead gitconfig set filetype=gitconfig
"Dont hide JSON syntax.
let g:vim_json_syntax_conceal = 0
"Set cursor word highlight to 100ms
let g:HiCursorWords_delay = 100
